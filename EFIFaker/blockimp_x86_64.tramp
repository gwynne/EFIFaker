#!/bin/sh

# -----------------------------------------------------------------------
#  Copyright (c) 2010-2011, Plausible Labs Cooperative, Inc.
#  All Rights Reserved.
# 
#  Permission is hereby granted, free of charge, to any person obtaining
#  a copy of this software and associated documentation files (the
#  ``Software''), to deal in the Software without restriction, including
#  without limitation the rights to use, copy, modify, merge, publish,
#  distribute, sublicense, and/or sell copies of the Software, and to
#  permit persons to whom the Software is furnished to do so, subject to
#  the following conditions:
#
#  The above copyright notice and this permission notice shall be included
#  in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#  NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#  DEALINGS IN THE SOFTWARE.
#  -----------------------------------------------------------------------

# Supported architectures
check_architecture () {
    case $1 in
        x86_64)
            return 1
            ;;
        *)
            return 0
            ;;
    esac
}

# Page size
PAGE_SIZE="4096"

# The name of this page
PAGE_NAME=pl_blockimp_table_page

# Prefix to be placed at the start of the trampoline page
trampoline_prefix () {
asm << 'EOF'
    _block_tramp_dispatch:
		pop    %r11
		push   %rbp
		mov    %rsp, %rbp
		and    $0xfffffffffffffff8, %r11 // truncate to the trampoline start (each is 8 bytes)
		sub    $0x1000, %r11 // load the config location

		push %rbx
		push %rdi
		push %rsi
		push %r12
		push %r13
		push %r14
		push %r15

		// Reconfigure MS ABI -> SysV ABI, shift first param up, save its caller-saved registers
		// Stack layout is:
		// --> param 6 0x18(%rbp)
		// --> param 5 0x10(%rbp)
		// --> retaddr 0x8(%rbp)
		// --> saved frame pointer 0x0(%rbp)
		mov		%rcx, %rsi
		mov		%rdx, %rdx
		mov		%r8, %rcx
		mov		%r9, %r8
		mov		0x38(%rbp), %r9
		push	%r9
		mov		0x30(%rbp), %r9
		push	%r9
		mov		0x28(%rbp), %r9
		push	%r9
		mov		0x20(%rbp), %r9
		push	%r9
		mov		0x18(%rbp), %r9
		push	%r9
		mov		0x10(%rbp), %r9

		// Load the block reference from the config page, and move to the first parameter
		mov   (%r11), %rdi

		// Jump to the block fptr; can't tail call because we need to tidy the stack (eww)
		call	*0x10(%rdi)

		add		$0x28, %rsp
		pop %r15
		pop %r14
		pop %r13
		pop %r12
		pop %rsi
		pop %rdi
		pop %rbx

		pop %rbp
		ret
		.align 4
EOF
}

# Generate a single trampoline
trampoline () {
asm << 'EOF'
    // Call into the dispatcher, placing our return address on the stack. 
    call _block_tramp_dispatch # 5 bytes
        .align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)
EOF
}
