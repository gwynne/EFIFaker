
# GENERATED CODE - DO NOT EDIT"
# This file was generated by /Users/gwynne/Desktop/Active Projects/EFIFaker/EFIFaker/gentramp.sh on Thu Mar 13 17:05:17 CDT 2014

# Write out the trampoline table, aligned to the page boundary
.text
.align 12
.globl _pl_blockimp_table_page
_pl_blockimp_table_page:

_block_tramp_dispatch:
pop    %r11
push   %rbp
mov    %rsp, %rbp
and    $0xfffffffffffffff8, %r11 // truncate to the trampoline start (each is 8 bytes)
sub    $0x1000, %r11 // load the config location

push %rbx
push %rdi
push %rsi
push %r12
push %r13
push %r14
push %r15

// Reconfigure MS ABI -> SysV ABI, shift first param up, save its caller-saved registers
// Stack layout is:
// --> param 6 0x18(%rbp)
// --> param 5 0x10(%rbp)
// --> retaddr 0x8(%rbp)
// --> saved frame pointer 0x0(%rbp)
mov		%rcx, %rsi
//		mov		%rdx, %rdx
mov		%r8, %rcx
mov		%r9, %r8
mov		0x88(%rbp), %r9
push	%r9
mov		0x80(%rbp), %r9
push	%r9
mov		0x78(%rbp), %r9
push	%r9
mov		0x70(%rbp), %r9
push	%r9
mov		0x68(%rbp), %r9
push	%r9
mov		0x60(%rbp), %r9
push	%r9
mov		0x58(%rbp), %r9
push	%r9
mov		0x50(%rbp), %r9
push	%r9
mov		0x48(%rbp), %r9
push	%r9
mov		0x30(%rbp), %r9

// Load the block reference from the config page, and move to the first parameter
mov   (%r11), %rdi

// Jump to the block fptr; can't tail call because we need to tidy the stack (eww)
call	*0x10(%rdi)

add		$0x48, %rsp
pop %r15
pop %r14
pop %r13
pop %r12
pop %rsi
pop %rdi
pop %rbx

pop %rbp
ret
.align 4

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

// Call into the dispatcher, placing our return address on the stack.
call _block_tramp_dispatch # 5 bytes
.align 4 // align the trampolines at 16 bytes (required for config page lookup and sizing)

